version: '2'
networks:
  debezium:
    name: debezium-network
    ipam:
      driver: default
services:
  zookeeper:
    image: debezium/zookeeper:0.9
    networks:
      - debezium
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:0.9
    networks:
      - debezium
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  mysql:
    image: mysql:latest
    networks:
      - debezium
    volumes:
      - "./mysql/.mysql-data/db:/var/lib/mysql"
      - "./mysql/custom-mysql.cnf:/etc/mysql/conf.d/mysql.cnf"
      - "./mysql/init:/docker-entrypoint-initdb.d/:ro"
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: customer
      MYSQL_USER: debeziumuser
      MYSQL_PASSWORD: debeziumpw
  connect:
    image: debezium/connect:0.9
    networks:
      - debezium
    ports:
     - 8083:8083
    links:
     - kafka
     - mysql
     - zookeeper
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses
  ksqldb-server:
    networks:
      - debezium
    image: confluentinc/cp-ksql-server
    hostname: ksqldb-server
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
  ksqldb-cli:
    networks:
      - debezium
    image: confluentinc/ksql-cli
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
